<h1>Get all the images from a workspace for v2</h1>

<p>
<b>Objective</b>: get a list of all the images in a Workspace. You will need the Workspace ID. This list will contain, for each image, details such as: image name, creation date, traits, comments, etc.<br />
This page contains the implementation details for v2 REST APIs. You can also see the example for <a href="/docs/page/get-all-images-from-a-workspace">v3 APIs</a>.
</p>

<a name="rest" class="internal-anchor"><h2>Implementation using REST APIs v2</h2></a>

<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/v2/workspaces/&lt;SET_WORKSPACEID&gt;/elements/images</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>GET</td>
        </tr>
        <!-- 
        <tr>
            <td><b>Developer Portal URL</b></td>
            <td><a href="/reference/apis#Images:getWorkspacesElementsImagesByWorkspaceid">[[developerPortalHost]]reference/apis#Images:getWorkspacesElementsImagesByWorkspaceid</a></td>
        </tr>
        -->
        <tr>
          <td><b>Comments</b></td>
          <td>You need to know the workspace ID.</td>
        </tr>
</table>

<h2>Code sample</h2>

<p>
    See below code samples in Python and Node.js.
</p>

<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<p>
<pre class="lang lang-curl">
curl --location --request GET '<script type="text/javascript">document.write(apiBaseStr); </script>/v2/workspaces/&lt;SET_WORKSPACEID&gt;/elements/images' \
--header 'Authorization: Bearer &lt;TOKEN&gt;' 
</pre>
</p>

<p>
<pre class="lang lang-python">
# Python Code (python 3.5+)
import requests
import pprint

'''
Required modules:
   requests 2.22.0
'''

token = '&lt;SET_TOKEN&gt;'

if __name__ == "__main__":
   portal = "<script type="text/javascript">document.write(apiBaseStr); </script>"
   workspaceId = '&lt;SET_WORKSPACE_ID&gt;'   
   API_version = 'v2'

   # Get all the images from a workspace

   API_endpoint = '/' + API_version + '/workspaces/' + workspaceId + '/elements/images'

   the_request = requests.get(
       portal + API_endpoint,
       headers={"Authorization": "Bearer " + token,
                "Content-Type": "application/json"
                }
   )

   json_response = the_request.json()

   pprint.pprint(json_response)

</pre>
</p>

<p>
<pre class="lang lang-node">
// Node.js Javascript   
/*

How to run:
node this_script_name.js

Requires "axios" module (0.19.0), run:
npm install axios

website: https://github.com/axios/axios

*/

var axios = require('axios');

const token = '&lt;SET_TOKEN&gt;';
const portal = '<script type="text/javascript">document.write(apiBaseStr); </script>';
const workspaceId = '&lt;SET_WORKSPACE_ID&gt;';
const api_version = 'v2';
const api_endpoint = '/workspaces/' + workspaceId + '/elements/images';

var request_values = {
    url: portal + '/' + api_version + api_endpoint,
    method : 'GET' ,
    headers : {
        'Authorization': "Bearer " + token,
        'Content-Type' : 'application/json'    
    }
};

axios(request_values)
    .then(function (response) {
        if (response.status == 200)
        {
            console.log("Success");
            console.log(response.data);
        }
    })
    .catch (function (error) {
        console.log('Error: ' + error.message);
    });               
</pre>        
</p>

<p>
You can modify this script to return a list of each specific object from the workspace by changing the last element in the API entrypoint:
<span class="pre">API_endpoint = '/v2/workspaces/' + workspaceId + '/elements/images'</span>. Here, replace the final <span class="pre">'/images'</span> element with:
<ul>
 <li>"/documents" </li>
 <li>"/notes" </li>
 <li>"/images"</li>
 <li>"/text"</li>
 <li>"/canvas"</li>
 <li>"/browsers"</li>
 <li>"/strokes"</li>
 <li>"/videos"</li>
 <li>"/grids"</li>
</ul>
</p>

<h2>OUTPUT</h2>

<p>
What you should get: JSON with the list of all images in the workspace
</p>
<table class="table table-striped">
        <tr>
            <td><b>Element</b></td>
            <td><b>Json</b></td>
            <td><b>Comments</b></td>
        </tr>
        <tr>
            <td>Image ID</td>
            <td>['images'][N]['id']</td>
            <td>where N is the N-th workspace in the list.</td>
        </tr>
        <tr>
            <td>Image Title</td>
            <td>['workspaces'][N]['title']</td>
            <td>where N is the N-th workspace in the list.</td>
        </tr>
        <tr>
            <td>Image URL</td>
            <td>['workspaces'][N]['url']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>      
</table>

<!-- v3 
<table class="table table-striped">
        <tr>
            <td><b>Element</b></td>
            <td><b>Json</b></td>
            <td><b>Comments</b></td>
        </tr>
        <tr>
            <td>Image ID</td>
            <td>['data'][N]['id']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
        <tr>
            <td>Image Title</td>
            <td>['data'][N]['title']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
        <tr>
            <td>Image URL</td>
            <td>['data'][N]['url']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
      
      </table>
-->


<h3>Output Json sample</h3>

<pre>
{'images': [{'comments': [{'actorId': '38988',
           'actorType': 'user',
           'date': '2019-07-23T17:37:03+00:00',
           'id': '5d3745bfda1ecc2c2d00036c',
           'name': 'Ansel Adams',
           'text': 'Nice picture, beautiful dunes.'}],
     'height': 871,
     'id': '5d374593da139IOOd000369',
     'order': 193,
     'pin': False,
     'scale': 0.4,
     'strokeIds': [],
     'title': 'Screen Shot 2019-06-18 at 2.51.06 PM.png',
     'traits': [{'http://test.bluescape.com/picture/description': 'Sand '
                                                                  'Dunes, '
                                                                  'big, '
                                                                  'light '
                                                                  'on '
                                                                  'one '
                                                                  'side, '
                                                                  'shadow '
                                                                  'ont '
                                                                  'he '
                                                                  'other '
                                                                  'one',
                 'http://test.bluescape.com/picture/tags': ['sand '
                                                            'dunes',
                                                            'light',
                                                            'desert',
                                                            'blue sky',
                                                            'yellow '
                                                            'sand',
                                                            'sand'],
                 'http://test.bluescape.com/picture/title': 'Nice sand '
                                                            'dunes '
                                                            'picture'}],
                 'url': 'https://s3.amazonaws.com/public-assets.bluescape.com/sessions/objects/QJh-lZUZGaFinBFuz2/5d37459cc2c9Ad000369.png?X-Amz&lt;-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=BKIXIWO33I6HA%2F20191723%2Fus-1%2Fs3%2Faws4_request&X-Amz-Date=20190723T230936Amz-Expires=300',
                 'width': 1394,
                 'workspace_uid': 'QJh-lZU9RRFinOuzeR2',
                 'x': 6344,
                 'y': 4520}
                ]
}     
</pre>

<!-- V3
<pre>
{
    "data": [
        {
            "id": "6024576d277cc809d1391072",
            "zIndex": 6,
            "transform": {
                "x": -22552.69375,
                "y": 16430.16964285714,
                "scaleX": 1,
                "scaleY": 1
            },
            "traits": null,
            "pinned": false,
            "attachments": [],
            "width": 609,
            "height": 606,
            "title": "doge.png",
            "filename": "doge.png",
            "type": "Image",
            "asset": {
                "url": "https://s3bucket.s3.s3region.amazonaws.com/jb37zadzAvin16ti2A-9/6024576d277cc809d1391072.png?X-Amz-Algorithm=AWS4-ABCD-ABC123&X-Amz-Credential=AKIA26JKTHARMSCAX2M2%2F20210223%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211243T213700Z&X-Amz-Expires=900&X-Amz-Signature=c523152d2d6f2zbd028d7e371259ee6489d45db0777e6d3403e0f4a413e1035f&X-Amz-SignedHeaders=host",
                "imageFormat": "png"
            }
        }
    ]
} 
</pre>
-->

<br />
If you have any questions or comments, please contact us at <a href="https://support.bluescape.com" target="_blank">Bluescape support</a>.
