<h1>Create a Canvas and add a Note to it</h1>

<p>
<b>Objective</b>: Create a new Canvas in your Workspace and add a Note to this new Canvas. You will learn how to get the IDs of newly created objects within your Workspace, and how to use them to associate other objects with them. You will need the Workspace ID.  
</p>

<h4>Create Canvas</h4>

<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/api/v3/workspaces/&lt;workspaceId&gt;/elements</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>POST</td>
        </tr>
        <!-- 
        <tr>
            <td><b>Developer Portal URL</b></td>
            <td><a href="/reference/apis#Canvas:postWorkspacesElementsCanvasByWorkspaceid">[[developerPortalHost]]/reference/apis#Canvas:postWorkspacesElementsCanvasByWorkspaceid</a></td>
        </tr>
        -->
        <tr>
          <td><b>Body</b></td>
            <td>{ </br>
            &nbsp;&nbsp;&nbsp;&nbsp; "type": "Canvas",</br> 
            &nbsp;&nbsp;&nbsp;&nbsp; "name": "&lt;SET_CANVAS_NAME&gt;"</br>
            }
            </td>
        </tr>
        <tr>
          <td><b>Comments</b></td>
          <td>You need to know the workspace ID.</td>
        </tr>
</table>

<h4>Create Note within Canvas</h4>

<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/api/v3/workspaces/&lt;workspaceId&gt;/elements</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>POST</td>
        </tr>
        <!-- 
        <tr>
            <td><b>Developer Portal URL</b</td>
            <td><a href="/reference/apis#Notes:postWorkspacesElementsCanvasNotesByWorkspaceidCanvasid">[[developerPortalHost]]/reference/apis#Notes:postWorkspacesElementsCanvasNotesByWorkspaceidCanvasid</a></td>
        </tr>
        -->
        <tr>
            <td><b>Body</b></td>
            <td>{ </br>
            &nbsp;&nbsp;&nbsp;&nbsp; "type": "Note",</br> 
            &nbsp;&nbsp;&nbsp;&nbsp; "text": "&lt;SET_TEXT&gt;"</br>
            }
            </td>
        </tr>
        <tr>
          <td><b>Comments</b></td>
          <td>You need to ensure that the Note fits within the Canvas' boundaries. You also need to ensure that the Note's position falls within the Canvas' boundaries. </br>
              If you need to change the dimensions or position of the Note, you'll need to add extra parameters in the Body of your request. </br>
              <b>To change the dimensions of the Note, the body should look like this:</b></br>
              { </br>
            &nbsp;&nbsp;&nbsp;&nbsp; "type": "Note",</br> 
            &nbsp;&nbsp;&nbsp;&nbsp; "text": "&lt;SET_TEXT&gt;"</br>
            &nbsp;&nbsp;&nbsp;&nbsp; "transform": {"scale": &lt;SET_SCALE&gt;} </br>
            } </br>
              
              <b>To change the position of the Note, the body should look like this: </b></br>
              { </br>
            &nbsp;&nbsp;&nbsp;&nbsp; "type": "Note",</br> 
            &nbsp;&nbsp;&nbsp;&nbsp; "text": "&lt;SET_TEXT&gt;"</br>
            &nbsp;&nbsp;&nbsp;&nbsp; "transform": {"x": &lt;SET_X&gt;, "y": &lt;SET_Y&gt;} </br>
            }              
               </br>
          </td>       
        </tr>        
</table> </br>
<b>NOTE:</b> For this basic example, the above "Comments" section is not applicable.

<h2>Code sample</h2>

<p>
        See below code samples in Python and Node.js.
</p>

<p>

<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<pre class="lang lang-python">
# Python Code (python 3.5+)
import requests
import datetime
import pprint

'''

Required modules:
    requests 2.22.0

'''

token = '&lt;SET_TOKEN&gt;'        

if __name__ == "__main__":
    portal = '<script type="text/javascript">document.write("https://" + window.location.hostname); </script>' 
    workspaceId = '&lt;SET_WORKSPACE_ID&gt;'  # REMEMBER TO ADD WORKSPACE ID

    # Create new Canvas
    # Path:     /v3/workspaces/&lt;workspaceId&gt;/elements

    API_endpoint = '/api/v3/workspaces/' + workspaceId + '/elements'

    timestamp = datetime.datetime.now()

    data_load = {
        "type": "Canvas",
        "name": "&lt;SET_CANVAS_NAME&gt;"
    }

    the_request = requests.post(
        portal + API_endpoint,
        headers={"Authorization": "Bearer " + token,
                    "Content-Type": "application/json"
                    },
        json=data_load
    )

    json_response = the_request.json()
    # pprint.pprint(json_response) 

    canvasId = json_response['data']['id']


    # Add a Note to a canvas  
    # Path: 	/v3/workspaces/&lt;workspaceId&gt;/elements

    API_endpoint = '/api/v3/workspaces/' + workspaceId + '/elements'
    params = ''

    timestamp = datetime.datetime.now()

    # The X and Y coordinates for objects within a Canvas are relative to the top left corner of the Canvas
    data_load = {
        "type": "Note",
        "text": "&lt;SET_TEXT&gt;"
    }

    the_request = requests.post(
        portal + API_endpoint,
        headers={"Authorization": "Bearer " + token,
                    "Content-Type": "application/json"
                    },
        json=data_load
    )

    json_response = the_request.json()

    pprint.pprint(json_response)

    noteId = json_response['data']['id']
</pre>
</p>

<p>

<pre class="lang lang-node">
// Node.js Javascript
/*

How to run:
node this_script_name.js

Requires "axios" module (0.19.0), run:
npm install axios

website: https://github.com/axios/axios

*/

var axios = require('axios');

const token = '&lt;SET_TOKEN&gt;';
const portal = '<script type="text/javascript">document.write("https://" + window.location.hostname); </script>';
const workspaceId = '&lt;SET_WORKSPACE_ID&gt;';
const api_version = 'v3';
var api_endpoint = '/workspaces/' + workspaceId + '/elements';

function runRequest(portal,api_version,api_endpoint,the_method,data_load) {
    var request_values = {
        url : portal + '/api/' + api_version + api_endpoint,
        method : the_method ,
        headers : {
            'Authorization': "Bearer " + token,
            'Content-Type' : 'application/json'    
        },
        data : data_load,
    };

    let req = axios(request_values)
            .catch(error => { 
                console.error('ERROR processing ' + portal + '/' + api_version + api_endpoint);
                console.error(error.message); 
                console.error(error.response.data);
                return Promise.reject(error);
            });;
    
    return req;
}

async function runAPIRequests() {
    try {

        // Create canvas

        api_endpoint = '/workspaces/' + workspaceId + '/elements';
        the_method = 'POST';
        var currtime = new Date().toISOString().slice(0,16).replace('T',' ');

        data_load = {
            "type": "Canvas",
            "name": "&lt;SET_CANVAS_NAME&gt;"
        }
        
        var canvas_creation = await runRequest(portal,api_version,api_endpoint,the_method,data_load);

        const canvasId = canvas_creation.data.data.id;
        console.log("canvas ID: " + canvasId);

        // Now add a Note to the Canvas

        currtime = new Date().toISOString().slice(0,16).replace('T',' ');

        api_endpoint = '/workspaces/' + workspaceId + '/elements'
        method = 'POST';
        data_load = {
            "type": "Note",
            "text": "&lt;SET_TEXT&gt;"
        }


        var note_creation = await runRequest(portal,api_version,api_endpoint,the_method,data_load);

        var noteId = note_creation.data.data.id;
        console.log('Note ID: ' + noteId);

    } catch (error) {
        console.error('ERROR:');
        console.error(error.message);
    }
}

// Run the requests
runAPIRequests();
</pre>

</p>


<h2>OUTPUT</h2>

<p>
Each time you run a POST API, you will get back a Response Body with the properties of the newly created object. Within this data you can get the object ID and other important information.
</p>


<table class="table table-striped">
        <tr>
            <td><b>Element</b></td>
            <td><b>Json</b></td>
            <td><b>Comments</b></td>
        </tr>
        <tr>
            <td>Element ID</td>
            <td>['data']['id']</td>
        </tr>
        <tr>
            <td>Element Type</td>
            <td>['data']['type']</td>
        </tr>
        <tr>
            <td>Element Position and Size</td>
            <td>['data']['transform']</td>
        </tr>
      
      </table>

<h3>Output Json sample</h3>

<h4>Canvas creation</h4>

<p>From this response, you can obtain the newly created Canvas ID: ['data']['id']
<pre>
{
    "data": {
        "id": "600223e68de4a9001c434fe4",
        "zIndex": 36,
        "transform": {
            "x": 0,
            "y": 0,
            "scaleX": 1,
            "scaleY": 1
        },
        "traits": null,
        "pinned": false,
        "type": "Canvas",
        "name": "Test Canvas",
        "style": {
            "hidden": false,
            "width": 1000,
            "height": 1000,
            "borderColor": {
                "r": 238,
                "g": 85,
                "b": 80,
                "a": 1
            }
        }
    }
}
</pre></p>

<p><h4>Note Creation</h4>
<pre>
{
    "data": {
        "id": "600223b48de4a9001c434fd4",
        "zIndex": 35,
        "transform": {
            "x": 0,
            "y": 0,
            "scaleX": 1,
            "scaleY": 1
        },
        "traits": null,
        "pinned": false,
        "type": "Note",
        "width": 560,
        "height": 320,
        "text": "Note tests",
        "style": {
            "hidden": false,
            "fontSize": 64,
            "fontWeight": "normal",
            "textTransform": "none",
            "backgroundColor": {
                "r": 56,
                "g": 138,
                "b": 135,
                "a": 1
            }
        }
    }
}
</pre></p>

<p><br />
If you have any questions or comments, please contact us at <a href="https://support.bluescape.com" target="_blank">Bluescape support</a>.</p>
