<h1>Pagination</h1>

<p>
    <table style="background-color: #FFFFA5">
        <tr>
            <td style="padding:15px">   
                    <b><center>NOTICE</center>
                        <br />
                        In the current V3 version pagination mechanism has changed. The new cursor based pagination uses different URL query parameters depending on whether it is the initial request for a collection or a subsequent request. </a>
                    <br /> <br />
                    </b>
            </td>
        </tr>
    </table>
</p>    

<p>
    API endpoints that can return large numbers of objects return their results using an cursor-based paging mechanism
    to improve performance. Applications are able to specify <span class="pre">limit</span>, <span
        class="pre">filterBy</span> and <span class="pre">sortBy</span> query parameters in the initial request to control what subset of the results are returned to them.
</p>

<ul>
    <li>The <span class="pre">limit</span> parameter sets a maximum number of results to return per call. (defaults to a value of 25)</li>
    <li>The <span class="pre">filterBy</span> parameter specifies filter query condition. (supported fields: firstName, lastName, email, avatarUrl)</li>
    <li>The <span class="pre">sortBy</span> parameter specifies the sort query condition. (supported orders: asc, desc)</li>
    <li>The <span class="pre">cursor</span> parameter sets the cursor string to navigate next and prev. (defaults to a based64 encoded string)</li>
</ul>

<h3>A sample initial request</h3>

<p>
    The initial request contains the limit, filterBy & sortBy parameters that all subsequent requests will use. The result includes cursors for navigating back and forward in increments of the provided limit. Subsequent requests should only provide these cursors in order to continue pagination:
</p>

<pre>
/api/v3/users/me/workspaces?limit=1&filterBy=(name eq bob)&orderBy=name desc
</pre>

<p>
    The results retrieved from an endpoint that returns paginated results should have a prev and next cursor:
</p>

<ul>
    <li>the set of results</li>
    <li>the <span class="pre">prev_cursor</span> string can be used to request the previous page of results</li>
    <li>the <span class="pre">next_cursor</span> string can be used to request the next page of results</li>
</ul>

<h3>A sample initial response</h3>

<pre>
{
  "workspaces":[    //the results array
    {
      "id": "zYecVV0l2hppIhMSpdkL",
      "name": "workspace 1"
    }
  ],
  "prev_cursor": null,                                          // previous cursor is null in the initial request
  "next_cursor": "ZFJOWjtLtjBSOdP5XXdvkQzK2hRQ81WuoYKvQbnqSDK"  // next cursor navigates to subsequent requests
}
</pre>


<h3>A sample subsequent request</h3>

<p>
    After the initial request these parameters cannot be changed as they are included in the cursor which is opaque to the user:
</p>

<pre>
/api/v3/users/me/workspaces?cursor=ZFJOWjtLtjBSOdP5XXdvkQzK2hRQ81WuoYKvQbnqSDK
</pre>

<h3>A sample subsequent response</h3>

<pre>
{
  "workspaces":[    //the results array
    {
      "id": "4MbstEfKhPixXKRnSY7Z",
      "name": "workspace 2"
    }
  ],
  "prev_cursor": "WOsxk6rPfmJ82bLCnweOF1iZz4fJcU0RURgyGjgsPJ5b7RUgg",   // previous cursor points to the last request
  "next_cursor": "wFkZLNx+jnly3wRUMfUjzGV2gEMEpKWXDyHjCGtwRQ7IG"        // next cursor navigates to subsequent requests
}
</pre>