<h1>Get the list of your workspaces</h1>

<p>
    <b>Objective</b>: Get a list of all Workspaces you can access. You do not need to know your userId to perform this operation.
    From this list you can retrieve the workspace IDs to use on other APIs that require you to have the Workspace ID. This is a good test to verify 
    the functionality of your Access Token.
</p>

<table class="table table-striped">
    <tr>
      <td><b>Query</b></td>
      <td>Workspaces</td>
    </tr> 
    <tr>
      <td><b>Comments</b></td>
      <td>You do not need to know the userId to get this list of workspaces of the user.</td>
    </tr>
</table>

<h3>Example Query:</h3>
<pre>
query getWorkspaces{
    me {
        workspaces {
        totalItems
        results {
            name
            id
            }
        }
    }
}
</pre>

<h2>Code sample</h2>

<p>
    See below for full code examples of this implementation in Python and Node.js.
</p>

<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<pre class="lang lang-curl">
curl --location --request POST '<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/' \
--header 'Authorization: Bearer &lt;TOKEN&gt;' \
--header 'Content-Type: application/json' \
--data-raw '{"query":"query getWorkspaces{\n  me {\n    workspaces {\n      totalItems\n      results {\n        name\n        id\n      }\n    }\n  }\n}","variables":{}}'
</pre>

<pre class="lang lang-node">
const axios = require('axios');

const url = "<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/"
const token = "&lt;SET_TOKEN&gt;"
const query = 
    `query getWorkspaces{
        me {
            workspaces {
            totalItems
            results {
                name
                id
                }
            }
        }
    }`
const getWorkspaces = async () => {
    try {
        const response = await axios.post(url,
            {query: query}, 
            {headers: {"Authorization": "Bearer " + token}})
        
        console.log(response.data);
        return response
    }
    catch(error) {
        console.error(error)
    }
}

getWorkspaces();
</pre>

<pre class="lang lang-python">
import requests
import pprint

url = "<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/"
token = "&lt;SET_TOKEN&gt;"
query = """
    query getWorkspaces{
        me {
            workspaces {
            totalItems
            results {
                name
                id
                }
            }
        }
    }
    """
def makeQuery():

    response = requests.post(url, 
    headers={"Authorization": "Bearer " + token
    },
    json={'query': query})

    return response.json()

if __name__ == "__main__":
    response = makeQuery()
    pprint.pprint(response)
</pre>

<h3>Output</h3>
<pre>
{
    "data": {
        "me": {
            "workspaces": {
                "totalItems": 2,
                "results": [
                    {
                        "name": "test ONE",
                        "id": "7nAUfna7R97bTo1l2i3N"
                    },
                    {
                        "name": "workspace - example 1",
                        "id": "k03Mis4g6m4X872j6ovj"
                    }
                ]
            }
        }
    }
}
</pre>
