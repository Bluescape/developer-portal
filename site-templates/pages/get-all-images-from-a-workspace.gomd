<h1>Get all the images from a workspace for v3</h1>

<p>
<b>Objective</b>: get a list of all the images in a Workspace. You will need the Workspace ID. This list will contain, for each image, details such as: image name, creation date, traits, comments, etc.<br />
This page contains the implementation details for <a href="#rest">v3 REST APIs</a> and for <a href="#graphql">v3 GraphQL APIs</a>. You can also see the example for <a href="/docs/page/get-all-images-from-a-workspace-v2">v2 REST APIs</a>.
</p>

<a name="rest" class="internal-anchor"><h2>Implementation using REST APIs</h2></a>

<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/v3/workspaces/&lt;workspaceId&gt;/elements?type=Image</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>GET</td>
        </tr>
        <!-- 
        <tr>
            <td><b>Developer Portal URL</b></td>
            <td><a href="/reference/apis#Images:getWorkspacesElementsImagesByWorkspaceid">[[developerPortalHost]]reference/apis#Images:getWorkspacesElementsImagesByWorkspaceid</a></td>
        </tr>
        -->
        <tr>
          <td><b>Comments</b></td>
          <td>You need to know the workspace ID.</td>
        </tr>
</table>

<h2>Code sample</h2>

<p>
    See below code samples in Python and Node.js.
</p>

<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<p>
<pre class="lang lang-curl">
<code><code>
curl --location --request GET '<script type="text/javascript">document.write(apiBaseStr); </script>/v3/workspaces/&lt;workspaceId&gt;/elements?type=Image' \
--header 'Authorization: Bearer &lt;TOKEN&gt;' \
--header 'Cookie: __cfduid=dfb617d0f055c3b4bee6bbb1a62eed3f01617039740'
</code></code>
</pre>
</p>

<p>
<pre class="lang lang-python">
<code>
# Python Code (python 3.5+)
import requests
import pprint

'''
Required modules:
   requests 2.22.0
'''

token = '&lt;SET_TOKEN&gt;'

if __name__ == "__main__":
   portal = "<script type="text/javascript">document.write(apiBaseStr); </script>"
   workspaceId = '&lt;SET_WORKSPACE_ID&gt;'   
   API_version = 'v3'

   # Get all the images from a workspace

   API_endpoint = '/' + API_version + '/workspaces/' + workspaceId + '/elements?type=Image'

   the_request = requests.get(
       portal + API_endpoint,
       headers={"Authorization": "Bearer " + token,
                "Content-Type": "application/json"
                }
   )

   json_response = the_request.json()

   pprint.pprint(json_response)
</code>
</pre>
</p>

<p>
<pre class="lang lang-node">
<code><code>
// Node.js Javascript   
/*

How to run:
node this_script_name.js

Requires "axios" module (0.19.0), run:
npm install axios

website: https://github.com/axios/axios

*/

var axios = require('axios');

const token = '&lt;SET_TOKEN&gt;';
const portal = '<script type="text/javascript">document.write(apiBaseStr); </script>';
const workspaceId = '&lt;SET_WORKSPACE_ID&gt;';
const api_version = 'v3';
const api_endpoint = '/workspaces/' + workspaceId + '/elements?type=Image';

var request_values = {
    url: portal + '/' + api_version + api_endpoint,
    method : 'GET' ,
    headers : {
        'Authorization': "Bearer " + token,
        'Content-Type' : 'application/json'    
    }
};

axios(request_values)
    .then(function (response) {
        if (response.status == 200)
        {
            console.log("Success");
            console.log(response.data);
        }
    })
    .catch (function (error) {
        console.log('Error: ' + error.message);
    });
</code></code>
</pre>
</p>

<p>
You can modify this script to return a list of each specific object from the workspace by changing the last element in the API entrypoint:
<span class="pre">API_endpoint = '/v3/workspaces/' + workspaceId + '/elements?type=Image'</span>. Here, replace the final <span class="pre">'Image'</span> element with:
<ul>
 <li>"Document" </li>
 <li>"Note" </li>
 <li>"Image"</li>
 <li>"Text"</li>
 <li>"Canvas"</li>
 <li>"Browser"</li>
 <li>"Stroke"</li>
 <li>"Video"</li>
 <li>"Grid"</li>
 <li>"Shape"</li>
 <li>"Line"</li>
<!--
 <li>"Selection"</li>
 <li>"Window"</li>
-->
</ul>
</p>

<h2>OUTPUT</h2>

<p>
What you should get: JSON with the list of all images in the workspace
</p>


<table class="table table-striped">
        <tr>
            <td><b>Element</b></td>
            <td><b>Json</b></td>
            <td><b>Comments</b></td>
        </tr>
        <tr>
            <td>Image ID</td>
            <td>['data'][N]['id']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
        <tr>
            <td>Image Title</td>
            <td>['data'][N]['title']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
        <tr>
            <td>Image URL</td>
            <td>['data'][N]['url']</td>
            <td>where N is the N-th image in the list.</td>
        </tr>
      
      </table>


<h3>Output Json sample</h3>
<pre>
{
    "data": [
        {
            "id": "6024576d277cc809d1391072",
            "zIndex": 6,
            "transform": {
                "x": -22552.69375,
                "y": 16430.16964285714,
                "scaleX": 1,
                "scaleY": 1
            },
            "traits": null,
            "pinned": false,
            "attachments": [],
            "width": 609,
            "height": 606,
            "title": "doge.png",
            "filename": "doge.png",
            "type": "Image",
            "asset": {
                "url": "https://s3bucket.s3.s3region.amazonaws.com/jb37zadzAvin16ti2A-9/6024576d277cc809d1391072.png?X-Amz-Algorithm=AWS4-ABCD-ABC123&X-Amz-Credential=AKIA26JKTHARMSCAX2M2%2F20210223%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211243T213700Z&X-Amz-Expires=900&X-Amz-Signature=c523152d2d6f2zbd028d7e371259ee6489d45db0777e6d3403e0f4a413e1035f&X-Amz-SignedHeaders=host",
                "imageFormat": "png"
            }
        }
    ]
} 
</pre>

<a name="graphql" class="internal-anchor"><h2>Implementation using v3 GraphQL APIs</h2></a>

<table class="table table-striped">
    <tr>
      <td><b>Query</b></td>
      <td>elements</td>
    </tr> 
    <tr>
      <td><b>Comments</b></td>
      <td>You need to know the <span class="pre">workspaceId</span></td>
    </tr>
</table>

<h3>Example Query:</h3>

<pre>
query getImagesFromWorkspace($workspaceId: String!){
  elements(workspaceId: $workspaceId, type: Image) {
    __typename
    id
  }
} 
</pre>

<h2>Code sample</h2>

<p>
    See below for full code examples of this implementation in Python and Node.js.
</p>

<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<p>
<pre class="lang lang-curl">
<code><code>
curl --location --request POST '<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/' \
--header 'Authorization: Bearer &lt;SET_TOKEN&gt;' \
--header 'Content-Type: application/json' \
--data-raw '{"query":"query getImagesFromWorkspace($workspaceId: String!){\n  elements(workspaceId: $workspaceId, type: Image) {\n\t__typename\n\tid\n  }\n}\n","variables":{"workspaceId":"<workspaceId>"}}'
</code></code>
</pre>
</p>

<p>
<pre class="lang lang-node">
<code><code>
const axios = require('axios');

const url = "<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/"
const token = "&lt;SET_TOKEN&gt;"
const query = 
    `query getImagesFromWorkspace($workspaceId: String!){
        elements(workspaceId: $workspaceId, type: Image) {
        __typename
        id
        name
        }
    } `
const variables = {   
    workspaceId: "&lt;SET_WORKSPACEID&gt;"
}
const getWorkspaces = async () => {
    try {
        const response = await axios.post(url,
            {
                query: query,
                variables: variables
            }, 
            {headers: {"Authorization": "Bearer " + token}})
        
        console.log(response.data);
        return response
    }
    catch(error) {
        console.error(error)
    }
}

getWorkspaces();
</code></code>
</pre>
</p>

<p>
<pre class="lang lang-python">
<code>
import requests
import pprint

url = "<script type="text/javascript">document.write(apiBaseStr); </script>/v3/graphql/"
token = "&lt;SET_TOKEN&gt;"
query = """
    query getImagesFromWorkspace($workspaceId: String!){
        elements(workspaceId: $workspaceId, type: Image) {
        __typename
        id
        name
        }
    } 
    """

variables = {   
    "workspaceId": "&lt;SET_WORKSPACEID&gt;"
}

def makeQuery():

    response = requests.post(url, 
    headers={"Authorization": "Bearer " + token
    },
    json={
        'query': query,
        'variables': variables
        })

    return response.json()

if __name__ == "__main__":
    response = makeQuery()
    pprint.pprint(response)
</code>
</pre>
</p>

<br />
If you have any questions or comments, please contact us at <a href="https://support.bluescape.com" target="_blank">Bluescape support</a>.
