<h1>GraphQL Playground</h1>
<p>
    The GraphQL Playground provides a frontend UI for using Bluescape GraphQL API calls. You can access the playground via the <script type="text/javascript">document.write('<a href="' + graphQLStr + '" target="_blank">GraphQL Playground</a>');</script> page. </br>
    To gain a better understanding of how Bluescape uses GraphQL, see the <a href="/docs/page/what-is-graphql">What is GraphQL?</a> page.    
</p>
<h2>Table of Contents:</h2>
<ul style="list-style-type:none; padding-left: 0px;">
    <li><a href="#how-to-graphql">How to Use the GraphQL Playground</a></li>
    <li><a href="#api-example">API Example using the GraphQL Playground</a></li>
</ul>

<a name="how-to-graphql" class="internal-anchor"><h3>How to Use the GraphQL Playground</h3></a>
    In this section, we'll start with a general explanation of how to use the GraphQL Playground. In the next section, <a href="#api-example">API Example using the GraphQL Playground</a>, we'll go over a specific example. </br></br>
    You can access the playground via the <script type="text/javascript">document.write('<a href="' + graphQLStr + '" target="_blank">GraphQL Playground</a>');</script> page. </br></br>
    After accessing the link, you should see the main GraphQL Playground page: </br>
    <img class="img-responsive center-block" src="/docs/assets/images/graphql_playground.png">
    </br></br>
    For the remainder of this section, we'll reference the image below, which has highlighted areas of importance in the playground: </br>
    <img class="img-responsive center-block" src="/docs/assets/images/graphql_highlighted_playground.png"></br></br>
    <li><b>Box 1:</b> Notice that the GraphQL endpoint for your specific Bluescape instance will be displayed in the playground's address bar: </li></br>
    <li><b>Box 2:</b> You'll place your GraphQL API Request in the left-hand section of the playground: </li></br>
    <li><b>Box 3:</b> Clicking the <b>QUERY VARIABLES</b> tab will allow you to input your query parameters in the input field beneath it.</li></br>
    <li><b>Box 4:</b> Clicking the <b>HTTP HEADERS</b> tab will allow you to input your HTTP headers in the input field beneath it.</li></br>
    <li><b>Box 5:</b> To run your query, press the Play button in the middle of the playground. Please note that if your query, mutation or subscription has syntax errors, you will not be able to run it, the Play button will not be active.</li></br>
    <li><b>Box 6:</b> After running the query, your API response will be displayed in this section.</li></br>
    <li><b>Box 7:</b> You can open a new query tab by clicking the <span class="pre">+</span> icon. This will allow you to write separate queries in new tabs.</li> </br>
    <li><b>Box 8:</b> You can prettify your JSON query if you click the <b>Prettify</b> button.</li></br>
    <li><b>Box 9:</b> To see a history of the requests you've ran in the playground, click on this <b>History</b> tab. An example of what gets displayed when expanding this tab is shown below:</li> </br>
    <img class="img-responsive left-block" src="/docs/assets/images/playground_history.png" height="300" width="300"></br>
    <li><b>Box 10:</b> To adjust the playground's settings, click on the Gear icon. This will open up a new Settings tab, as seen in the example below: </li></br>
    <img class="img-responsive left-block" src="/docs/assets/images/playground_settings.png" height="700" width="1000"></br>
    Be sure to click <b>Save Settings</b> in the top-right to see them reflected in the playground.</br></br>
    <li><b>Box 11:</b> You can copy the GraphQL API request as a cURL request by clicking the <b>COPY CURL</b> button. This will allow you to run the API request as a cURL request from the command-line.</li> </br>
    <li><b>Box 12:</b> Opening the Docs tab will open up the documentation for all of the GraphQL APIs that are available to you in the playground. See the example below, which displays the documentation for the <b>id</b> field of an Element:</li> </br>
    <img class="img-responsive left-block" src="/docs/assets/images/playground_docs.png" height="600" width="600"></br>
    <!-- <b>TODO</b>: possibly link to somewhere giving a full explanation of the Docs tab? </br></br> -->
    <li><a name="schema" class="internal-anchor"><b>Box 13:</b></a> Opening the Schema tab will open up the schema information for all of the GraphQL APIs available to you in the playground. See the example below:</li></br>
    <img class="img-responsive left-block" src="/docs/assets/images/playground_schema.png" height="600" width="500"></br>
    Notice the <b>Download</b> button in the top right. This will allow you to download the schema, to be used in other tools such as Postman, for autocompletion of the queries, mutations and subscriptions. </br>
    <!-- <b>TODO</b>: possibly link to full explanation of Schema tab? Should this documentation be written by ourselves, or just a link to a graphql schema page?</br></br> -->


<a name="api-example" class="internal-anchor"><h2>API Example using the GraphQL Playground</h2></a>
In this section, we'll go over an example Bluescape GraphQL API request using the GraphQL Playground. In this example, we will be retrieving a list of all the elements in a given workspace. We'll also utilize a key feature of GraphQL: the ability to only retrieve specific fields from a given API request. </br>
Specifically, we'll retrieve only the <span class="pre">type</span>, <span class="pre">id</span> and <span class="pre">(x,y)</span> fields from the response of a call to the <span class="pre">/workspace/{workspaceId}/elements</span> endpoint. </br></br>
We'll reference the screenshot below for the remainder of this section: </br>
<img class="img-responsive left-block" src="/docs/assets/images/playground_example.png"></br>
<li><b>Box A:</b> First, we'll place the example request in the API Request section of the playground. </li></br>
<li><b>Box B:</b> Next, we'll need to update the <b>QUERY VARIABLES</b> section with the necessary query headers for this API call. In this example, we need only the <b>workspaceId</b> parameter. </br>
For this section, you'll also need to input an authorization token into the <b>HTTP HEADERS</b> section. You'll need to click on <b>HTTP HEADERS</b> and provide the following: </li></br>
<pre>
{
  "authorization": "Bearer `<`SET_TOKEN`>`"
}
</pre>
<li><b>Box C:</b> Press the Play button to run the request.</li></br>
<li><b>Box D:</b> You can see the results of the request in this section. Notice that all of the elements in the workspace are returned showing only the parameters we specified: <span class="pre">type</span>, <span class="pre">id</span> and <span class="pre">(x,y)</span></li> </br>

Keep in mind that you can still utilize all of the other features of the GraphQL Playground in this example. You can inspect the documentation, schema, etc. if you wish.</br>
To get more information about GraphQL at Bluescape, refer to the documentation found in our other <a href="/docs/page/guides">Guides</a> pages.</br>
<br />
If you have any questions or comments, please contact us at <a href="https://support.bluescape.com" target="_blank">Bluescape support</a>.