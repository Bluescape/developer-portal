<h1>Create a Canvas and add a Text Element to it for v2</h1>

<p>
<b>Objective</b>: Create a new Canvas in your Workspace and add a Text element to this new Canvas. You will learn how to get the IDs of newly created objects within your Workspace, and how to use them to associate other objects with them. You will need the <span class="pre">workspaceId</span>.<br />  
This page contains the implementation details for v2 REST APIs. You can also see the example for <a href="/docs/page/create-canvas-and-add-text">v3 APIs</a>.
</p>

<a name="rest" class="internal-anchor"><h2>Implementation using REST APIs v2</h2></a>

<h4>Create Canvas</h4>

<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/v2/workspaces/&lt;SET_WORKSPACEID&gt;/elements/canvas</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>POST</td>
        </tr>
        <tr>
          <td><b>Comments</b></td>
          <td>You need to know the workspace ID.</td>
        </tr>
</table>

<h4>Create Text within Canvas</h4>
<table class="table table-striped">
        <tr>
          <td><b>Endpoint</b></td>
          <td>/v2/workspaces/&lt;SET_WORKSPACEID&gt;/elements/canvas/&lt;canvas_id&gt;/text</td>
        </tr>
        <tr>
            <td><b>Method</b></td>
            <td>POST</td>
        </tr>
        <tr>
            <td><b>Comments</b></td>
            <td>You need to know the Canvas ID</td>
        </tr>        
</table> 
</br>
<!-- 
<b>NOTE:</b> For this basic example, the above "Comments" section is not applicable.
-->
<h2>Code sample</h2>

<p>
    See below code samples in Python and Node.js.
</p>


<div class="lang-selector">
    <button data-lang="curl" type="button" class="btn btn-sm btn-primary curlButton">cURL</button>
    <button data-lang="node" type="button" class="btn btn-sm btn-primary nodeButton">Node.js</button>
    <button data-lang="python" type="button" class="btn btn-sm btn-primary pythonButton">Python</button>
</div>

<p>
<pre class="lang lang-python">
<code>
## Python Code (python 3.5+)
import requests
import datetime
import pprint

'''

Required modules:
    requests 2.22.0

'''

token = '&lt;SET_TOKEN&gt;'        

if __name__ == "__main__":
    portal = 'https://api.apps.us.bluescape.com' 
    workspace_uid = '&lt;SET_WORKSPACE_ID&gt;'  # REMEMBER TO ADD WORKSPACE UID

    # Create new Canvas
    # Path:     /v2/workspaces/<workspace_uid>/elements/canvas

    API_endpoint = '/v2/workspaces/' + workspace_uid + '/elements/canvas'

    timestamp = datetime.datetime.now()

    data_load = {
        'x': 10000,
        'y': 1000,
        'width': 4000,
        'height': 4000,
        'name': "New Canvas - Creation time: " + str(timestamp),
        'borderColor': 'Yellow'
    }

    the_request = requests.post(
        portal + API_endpoint,
        headers={"Authorization": "Bearer " + token,
                    "Content-Type": "application/json"
                    },
        json=data_load
    )

    json_response = the_request.json()
    # pprint.pprint(json_response) 

    canvas_id = json_response['canvas']['id']

    # Add a Note to a canvas  
    # Path: 	/v2/workspaces/<workspace_uid>/elements/canvas/<canvas_id>/text

    API_endpoint = '/v2/workspaces/' + workspace_uid + '/elements/canvas/' + canvas_id + '/text'
    params = ''

    timestamp = datetime.datetime.now()

    # The X and Y coordinates for objects within a Canvas are relative to the top left corner of the Canvas
    data_load = {
        "x": 400,
        "y": 400,
        "text": "Hello! New Text, added at " + str(timestamp)
    }

    the_request = requests.post(
        portal + API_endpoint,
        headers={"Authorization": "Bearer " + token,
                    "Content-Type": "application/json"
                    },
        json=data_load
    )

    json_response = the_request.json()

    pprint.pprint(json_response)

    text_id = json_response['text']['id']
</code>
</pre>
</p>

<p>
<pre class="lang lang-node">
<code>
// Node.js Javascript
/*

How to run:
node this_script_name.js

Requires "axios" module (0.19.0), run:
npm install axios

website: https://github.com/axios/axios

*/

var axios = require('axios');

const token = '&lt;SET_TOKEN&gt;';
const portal = 'https://api.apps.us.bluescape.com';
const workspace_uid = '&lt;SET_WORKSPACE_ID&gt;';
const api_version = 'v2';
var api_endpoint = '/workspaces/' + workspace_uid + '/elements/images';

function runRequest(portal,api_version,api_endpoint,the_method,data_load) {
    var request_values = {
        url : portal + '/' + api_version + api_endpoint,
        method : the_method ,
        headers : {
            'Authorization': "Bearer " + token,
            'Content-Type' : 'application/json'    
        },
        data : data_load,
    };

    let req = axios(request_values)
            .catch(error => { 
                console.error('ERROR processing ' + portal + '/' + api_version + api_endpoint);
                console.error(error.message); 
                console.error(error.response.data);
                return Promise.reject(error);
            });;
    
    return req;
}

async function runAPIRequests() {
    try {

        // Create canvas

        api_endpoint = '/workspaces/' + workspace_uid + '/elements/canvas';
        the_method = 'POST';
        var currtime = new Date().toISOString().slice(0,16).replace('T',' ');

        data_load = {
            'x': 1000,
            'y': 1000,
            'width': 4000,
            'height': 4000,
            'name': "New Canvas - Creation time: " + currtime ,
            'borderColor': 'Yellow'
        }
        
        var canvas_creation = await runRequest(portal,api_version,api_endpoint,the_method,data_load);

        const canvas_id = canvas_creation.data.canvas.id;

        console.log("canvas ID: " + canvas_id);

        // Now add a Note to the Canvas

        currtime = new Date().toISOString().slice(0,16).replace('T',' ');

        api_endpoint = '/workspaces/' + workspace_uid + '/elements/canvas/' + canvas_id + '/text'
        method = 'POST';
        data_load = {
            "x": 400,
            "y": 400,
            "text": "Hello! New Text, added at " + currtime
        }


        var text_creation = await runRequest(portal,api_version,api_endpoint,the_method,data_load);

        var text_id = text_creation.data.note.id;

        console.log('Text ID: ' + text_id);

    } catch (error) {
        console.error('ERROR:');
        console.error(error.message);
    }
}

// Run the requests
runAPIRequests();
</code>
</pre>
</p>


<h2>OUTPUT</h2>


      
</table>
<!-- v3
<table class="table table-striped">
        <tr>
            <td><b>Element</b></td>
            <td><b>Json</b></td>
        </tr>
        <tr>
            <td>Element ID</td>
            <td>['data']['id']</td>
        </tr>
        <tr>
            <td>Element Type</td>
            <td>['data']['type']</td>
        </tr>
        <tr>
            <td>Element Position and Size</td>
            <td>['data']['transform']</td>
        </tr>
      
</table>
-->


<h3>Output Json sample</h3>

<h4>Canvas creation</h4>
<p>
From this answer you can obtain the newly created Canvas ID: ['canvas']['id'] 
<pre>
{'canvas': {'borderColor': 'Yellow',
            'height': 4000,
            'id': '5d3f40a660c139001477f4ea',
            'name': 'New Canvas - Creation time: 2019-07-29 11:53:26.290894',
            'order': 215,
            'width': 4000,
            'x': 10000,
            'y': 1000}
}    
</pre>
</p>

<h4>Text creation</h4>

<pre>
{
    "text": {
        "id": "60b9bfb39ce614001754291b",
        "workspace_id": "F1rv19jfopwAbjgQVKLY",
        "x": 1000,
        "y": 900,
        "width": 600,
        "height": 400,
        "text": "Hello! New Text, added at 2021-05-26T23:26:43Z",
        "fontSize": 64,
        "fontFamily": "Dosis",
        "fontColor": "#0000FF",
        "fontWeight": "normal",
        "fontStyle": "normal",
        "textTransform": "inherit",
        "backgroundColor": "#FFFFFF",
        "pin": false,
        "order": 1
    }
}  
</pre>


<!-- v3
From this response, you can obtain the newly created Canvas ID: ['data']['id']
<pre>
{
    "data": {
        "id": "600223e68de4a9001c434fe4",
        "zIndex": 36,
        "transform": {
            "x": 0,
            "y": 0
        },
        "traits": null,
        "pinned": false,
        "type": "Canvas",
        "name": "Test Canvas",
        "style": {
            "width": 1000,
            "height": 1000,
            "borderColor": {
                "r": 238,
                "g": 85,
                "b": 80,
                "a": 1
            }
        }
    }
}
</pre>

<h4>Text Creation</h4>
<pre>
{
    "data": {
        "id": "604abe996a3fdb001f7cec3b",
        "zIndex": 0,
        "transform": {
            "x": 0,
            "y": 0,
            "scaleX": 1,
            "scaleY": 1
        },
        "traits": null,
        "pinned": false,
        "type": "Text",
        "text": "Text Example",
        "style": {
            "width": 256,
            "height": 298,
            "fontWeight": "normal",
            "textTransform": "none",
            "fontSize": 64,
            "fontFamily": "Dosis",
            "fontStyle": "normal",
            "color": {
                "r": 234,
                "g": 62,
                "b": 53,
                "a": 1
            },
            "backgroundColor": {
                "r": 0,
                "g": 0,
                "b": 0,
                "a": 1
            }
        }
    }
}
</pre>
-->

<br />
If you have any questions or comments, please contact us at <a href="https://support.bluescape.com" target="_blank">Bluescape support</a>.
